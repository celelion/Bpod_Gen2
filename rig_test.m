function rig_test()
%rig_test
%   Testing rig_test with Bpod-Gen2
global BpodSystem

Ack = LoadSerialMessages('PA1', ['P' 1 255],11);
Ack = LoadSerialMessages('PA1', ['P' 1 0],22);


sma = NewStateMachine();

%sma = AddState(sma, 'Name', 'WaitForPokePA1', ...
%    'Timer', 0,...
%    'StateChangeConditions', {'PA1_Port1In', 'InPokePA1'},...
%    'OutputActions', {'PA1',11});

%sma = AddState(sma, 'Name', 'InPokePA1', ...
%    'Timer', 0,...
%    'StateChangeConditions', {'PA1_Port1Out', 'WaitForPoke1'},...
%    'OutputActions', {'PA1',22});

sma = AddState(sma, 'Name', 'WaitForPoke1', ...
    'Timer', 0,...
    'StateChangeConditions', {'Port1In', 'InPoke1'},...
    'OutputActions', {'PWM1',255});

sma = AddState(sma, 'Name', 'InPoke1', ...
    'Timer', 0,...
    'StateChangeConditions', {'Port1Out', 'WaitForPoke2'},...
    'OutputActions', {'LED1',255});

sma = AddState(sma, 'Name', 'WaitForPoke2', ...
    'Timer', 0,...
    'StateChangeConditions', {'Port2In', 'InPoke2'},...
    'OutputActions', {'PWM2',255});

sma = AddState(sma, 'Name', 'InPoke2', ...
    'Timer', 0,...
    'StateChangeConditions', {'Port2Out', 'WaitForPoke3'},...
    'OutputActions', {'LED2',255});

sma = AddState(sma, 'Name', 'WaitForPoke3', ...
    'Timer', 0,...
    'StateChangeConditions', {'Port3In', 'InPoke3'},...
    'OutputActions', {'PWM3',255});

sma = AddState(sma, 'Name', 'InPoke3', ...
    'Timer', 0,...
    'StateChangeConditions', {'Port3Out', 'exit'},...
    'OutputActions', {'LED3',255});
SendStateMatrix(sma);
RawEvents = RunStateMatrix;
Ack = ResetSerialMessages;

end

